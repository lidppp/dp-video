import { optionsFormat } from "./baseType";
export default class Controller {
    contrllerDom: HTMLElement;
    video: HTMLVideoElement;
    leftBox_play: HTMLElement;
    leftBox_pause: HTMLElement;
    parentDom: HTMLElement;
    actionTime: HTMLElement;
    endTime: HTMLElement;
    speadSelect: HTMLElement;
    changeVolume: HTMLElement;
    popWindowPlayer: HTMLElement;
    documentFullScreen: HTMLElement;
    windowFullScreen: HTMLElement;
    progressBar: HTMLElement;
    timePoint: HTMLElement;
    timePointbg: HTMLElement;
    nextBtn: HTMLElement;
    selectSrc: HTMLElement;
    selectDefinition: HTMLElement;
    progressBarChange: CustomEvent;
    progressBarJumpChange: CustomEvent;
    options: optionsFormat;
    reqAFId: number;
    constructor(videoDom: HTMLVideoElement, parentDom: HTMLElement, options: optionsFormat);
    creatContrller(): void;
    bindEventListener(): void;
    play(): void;
    pause(): void;
    changeVolumeIcon(isMuted: boolean): void;
    changeVolumeDom(): void;
    changeVolumeFn(volume: number): void;
    enterPictureInPicture(): void;
    documentFullScreenFn(): void;
    exitDocumentFullScreenFn(): void;
    fullScreen(element: HTMLElement): void;
    exitFullscreen(): void;
    changeWindowFullScreen(): void;
    changeActionTime(flag?: boolean, isjump?: boolean): void;
    changeCurrentTime(e?: MouseEvent, offsetx?: number): void;
    progressBarClick(e: MouseEvent): void;
    changeBtn(play: boolean): void;
    changePlaybackRate(className: string, spead: number, lebal: string): void;
    getElement(): HTMLElement;
    unload(): void;
    hide(): void;
    show(): void;
}
//# sourceMappingURL=creatController.d.ts.map